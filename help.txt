Nyuu v0.1.0
-----------

Usage: nyuu -h [server] [options] file1 file2 ...

All options take one parameter, except for those marked as a flag option.

Upload Server Options:

  -h,  --host                Host/server to upload to (required). Prefix with
                             `unix:` to specify a Unix socket path.
                             SSL with Unix sockets requires NodeJS >= 0.12
  -P,  --port                Port to connect to (default 119 or 563 if `--ssl`
                             is specified)
  -6,  --ipv6                Connect over IPv6 (flag option)
                             Requires NodeJS >= 0.12
       --bind-host           Local address to bind to
  -S,  --ssl                 Connect over SSL (flag option)
       --ignore-cert         Ignore SSL certificate problems
       --sni-host            SNI host name to send if connecting over SSL
       --ssl-ciphers         List of SSL ciphers to use, in OpenSSL format
                             See https://nodejs.org/api/tls.html for defaults
                             Requires NodeJS >= 0.12
       --ssl-method          Force SSL/TLS method. For details, see
                             https://nodejs.org/api/tls.html
  -u,  --user                Username to authenticate with
  -p,  --password            Password to authenticate with
  -n,  --connections         Number of connections to use (default 1)
       --timeout             Timeout on server responses (default 60s)
       --connect-timeout     Connect timeout (default 30s)
       --connect-retries     Number of connection retry attempts (default 1)
       --reconnect-delay     Delay connection retries (default 5s)
       --post-retries        Number of post retry attempts (default 1)

Article/Post Options:

  -a,  --article-size        Target size of each news post (default 750K). Note
                             that yEnc makes the actual size larger.
       --article-line-size   Max bytes per line (default 128)
  -t,  --comment             Comment to insert before post subject
       --comment2            Comment to append after post subject
  -F,  --group-files         Group files by filename, similar to how indexers
                             would see them. This only affects the file counter
                             placed in the subject (flag option)
  -s,  --subject             Subject to use for posts. The following
                             placeholders are available:
                                 {filenum}   Current file number in collection
                                 {files}     Number of files in collection
                                 {filename}  File's name
                                 {filesize}  File's size in bytes
                                 {part}      Article part number
                                 {parts}     Number of articles for the file
                                 {size}      File chunk size (before yEnc)
                             Default is similar to the following:
                                 {comment} [{files}/{filenum}] - "{filename}" yEnc ({part}/{parts}) {filesize} {comment2}
  -f,  --from                Shortcut for `-H From=...`
                             Defaults to 'username <username@host>'
  -g,  --groups              Shortcut for `-H Newsgroups=...`
                             Separate multiple groups with commas.
                             Defaults to alt.binaries.test
  -H,  --header              Specify an NNTP header in either of these forms:
                                 -H "MyHeader: MyValue"
                                 -H MyHeader=MyValue
                             This option can be specified multiple times. Note
                             that specifying the same header more than once is
                             currently not supported.

Post Check Options:

       --check-connections   Number of connections to use for post checking
                             (default 0). Set to 1 to enable checking (setting
                             `--check-reuse-conn` will also enable checking).
                             Higher numbers of connections are only useful if
                             post checking is bottlenecking the rest of the
                             proces.
                             You can prefix any of the options above, in the
                             "Upload Server Options" section, with `--check-`
                             to override that behaviour on these checking
                             connections, for example `--check-host` makes
                             Nyuu perform post checking on a different host.
                             `--check-post-retries` is unavailable as no
                             posting is performed on these connections.
       --check-reuse-conn    Reuse uploading connections for post checking
                             (flag option). If this option is set,
                             `--check-connections` can be set to 0 if you don't
                             wish to create more connections than specified by
                             `--connections`
                             This flag is experimental and generally shouldn't
                             be used
  -c,  --check-tries         Maximum number of check attempts to perform.
                             A value of 0 disables post checking. (default 3)
       --check-delay         Initial delay after posting before performing
                             first check (default 5s)
       --check-retry-delay   Delay for check retries, if a check fails
                             (default 30s). Not used if `--check-tries` < 2
       --check-post-tries    Maximum number of attempts to re-post articles
                             that the post check could not find. Set to 0 to
                             disable re-posting articles (default 1)
       --check-group         Checking connections will be set to this group.
                             Some servers seem to want one set, otherwise
                             checking fails. If you set one, use a valid group
                             that you're not posting to, such as "bit.test"
       --check-ignore-fail   If post checking fails to find the posted article,
                             even after re-posting, continue on assuming the
                             last post attempt succeeded. If this is not set,
                             Nyuu will error out instead (flag option)
       --check-queue-size    Max number of articles queued for checking.
                             Posting will stall if the number of articles to be
                             checked exceeds this number. Increase this number
                             to avoid these stalls, at the expense of higher
                             memory usage (default 50)

NZB Output Options:

  -o,  --out                 If supplied, will write NZB to this file
                             Can be '-' which writes the NZB to stdout
                             Note: due to a bug in minimist, `--out -` will not
                             work, use `-o-` instead.
                             You can also pipe this into the stdin of another
                             process by prefixing a command with `proc://`, for
                             example: `-o 'proc://cat>out.nzb'`, which is the
                             same as using `-o- | cat>out.nzb`. The stdout and
                             stderr of the process is discarded.
       --minify              Minify outputted XML (flag option)
       --nzb-compress        Compress outputted NZB. Can be gzip, zlib or
                             deflate. If node-xz is installed, xz is also
                             available.
       --nzb-compress-level  Compression level (0-9) to use. Default is 6
  -M,  --meta                Add a <meta> tag to the NZB. See `--header` option
                             above for syntax details.
       --nzb-encoding        Character encoding used in the NZB (default utf-8)

Advanced:

       --disk-req-size       Disk read request size (default 750K)
       --disk-buf-size       Disk read-ahead buffer size (default 1500K)
                             Set to 0 to disable read-ahead buffering
       --post-queue-size     Max number of buffered articles for posting
                             (default 10)

Other Options:

  -r,  --subdirs             How sub-directories should be handled, can be:
                                 skip: ignore nested files (default)
                                 keep: upload all files in sub-directories
  -l,  --log-level           Controls the output verbosity, value can be:
                                 0: completely silent (if command parsed)
                                 1: only show fatal errors
                                 2: show warnings
                                 3: show information (default)
                                 4: show debugging info
  -v,  --verbose             Alias for `-l4` (flag option)
  -q,  --quiet               Alias for `-l2` (flag option)
  -T,  --log-time            Add timestamps to log entries (flag option)
  -?,  --help                Display this help screen (flag option)
       --version             Print application version number (flag option)

Input Files:

  Additional arguments are taken as files to be posted. Directories can be
  specified as well, in which case all files inside are processed according
  to the `--subdirs` option above.
  
  Nyuu also supports piping inputs from a command, however, as yEnc requires
  knowing exact file sizes in advance, this will need to be specified. The
  syntax for specifying a process input is as follows:
  
    procjson://"[name]",[size_in_bytes],"[command]"
  
  After the prefix, this is actually a 3 element JSON encoded array, where the
  square brackets are optional.
  [name] refers to the filename that will be used, it is your responsibility
  to ensure that there are no duplicates. [size_in_bytes] is the exact size of
  the data to be emitted from [command], in bytes. [command] is the command
  that will be executed, and its stdout will be uploaded. The stderr of this
  process is discarded, and nothing will be sent to stdin.
  Note that quotation marks and some other special characters may need to be
  escaped with backslashes, as per JSON encoding rules.
  
  For example, here's an elaborate way to upload the 6KB image, trollface.jpg
  as moe_kyun.jpg (note that `cat` is assumed to be the utility to read a file
  to stdout):
    nyuu -h 0 'procjson://"moe_kyun.jpg",6144,"cat trollface.jpg"' 

------------------
Examples

  nyuu -h example.com some_file
      Uploads some_file to the NNTP server at example.com

  nyuu -h news.example.com -S -u cat -p nyahaha -n3 -f 'Cat <eager-poster@computer>' -g alt.binaries.multimedia -o my_cat.nzb my_cat.mp4
      Uploads my_cat.mp4 to NNTPS server at news.example.com in group
      alt.binaries.multimedia. Upload is performed using 3 connections. 
      The from username is specified, and Nyuu will output an NZB, my_cat.nzb.
